{"version":3,"sources":["resources/backend.js","auth.js","components/searchbar/SearchBar.js","components/header/Header.js","components/taskCard/TaskCard.js","components/taskRow/TaskRow.js","components/taskPage/TaskPage.js","components/newTask/newTask.js","components/content/Content.js","components/menu/Menu.js","App.js","components/login/Login.js","components/protectedRoute/ProtectedRoute.js","serviceWorker.js","components/start/Start.js","index.js"],"names":["BASE_URL","getTasksByTopic","topic","a","fetch","then","res","json","getTaskStatusByUser","localStorage","getItem","getImagesForTask","taskID","getSpecificTaskStatus","userID","status","requestOptions","method","headers","body","JSON","stringify","newTask","fileName","fileContent","level","thema","imageNames","options","Titel","Text","Level","Thema","Images","uploadImages","images","setStatusForTask","getSchuelerList","authenticated","this","state","user","cb","username","password","result","setItem","alert","mail","console","log","message","role","clear","SearchBar","props","useState","isSearching","setIsSearching","style","width","background","border","padding","borderRadius","key","value","input","placeholder","onChange","e","target","Button","data-testid","onClick","Search","Header","setInput","updateInput","addNewTask","auth","getRole","className","ThemeProvider","theme","size","Typography","variant","align","display","justifyContent","flexDirection","alignItems","marginRight","variable","Switch","color","func","list","disabled","logout","history","push","TaskCard","f","active","id","TaskRow","scrollLeft","element","change","duration","start","currentTime","Math","easeInOutQuad","t","b","c","d","animateScroll","val","setTimeout","navRef","React","createRef","leftButton","rightButton","handleNav","direction","current","tasks","sort","Number","ArrowBackIos","ref","filter","task","Topic","map","statusArr","get","ID","ArrowForwardIos","Component","TaskPage","checkedState","setCheckedState","loading","setLoading","setImages","useStyles","makeStyles","root","wrapper","margin","spacing","position","buttonSuccess","backgroundColor","green","fabProgress","top","left","zIndex","buttonProgress","marginTop","marginLeft","setStatus","getStatus","getStatusRef","useRef","getImages","arr","i","url","imagePath","getImagesRef","useEffect","classes","buttonClassname","clsx","length","CircularProgress","height","ArrowBack","Fab","aria-label","event","formControl","minWidth","selectEmpty","NewTask","setFileName","fileType","setFileType","setFileContent","setLevel","setThema","uploading","setUploading","Map","files","setFiles","uploadData","preventDefault","FormData","entries","type","includes","append","r","imagePaths","onDrop","useCallback","acceptedFiles","forEach","file","name","split","fi","set","reader","FileReader","onabort","onerror","onload","binaryStr","readAsText","useDropzone","getRootProps","getInputProps","closeNewTask","Close","PictureAsPdf","fontSize","Description","FormControl","InputLabel","Select","labelId","MenuItem","onSubmit","Array","from","Image","CircularProgressWithLabel","Box","bottom","right","component","round","Content","selectedTask","s","setState","selected","tstatus","unselectTask","x","isLoading","updated","aufgaben","arrS","arrM","levelNames","helpArray","helpArrayS","st","numPos","myMap","hidden","index","aria-labelledby","other","alignContent","textAlign","a11yProps","paddingTop","tabs","borderRight","palette","divider","Menu","setValue","testid","Tabs","orientation","newValue","Tab","label","Transition","forwardRef","Slide","App","setNewTask","themeVariable","open","schueler","darkTheme","createMuiTheme","primary","main","dark","secondary","lightTheme","document","classList","add","handleOpen","Dialog","TransitionComponent","keepMounted","onClose","aria-describedby","DialogTitle","DialogContent","DialogContentText","Fragment","user_id","email","DialogActions","remove","Login","setUsername","setPassword","setMail","switchStatus","setSwitchStatus","login","to","pathname","location","checked","AccountCircle","TextField","Lock","onKeyUp","Mail","signup","ProtectedRoute","rest","render","Boolean","window","hostname","match","Start","href","ReactDOM","exact","path","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.ad70c499.chunk.js","sourcesContent":["export const BASE_URL = \"https://nicofreundt.ddns.net:3001\";\r\n\r\nexport const getTasksByTopic = async (topic) => {\r\n    return await fetch(`${BASE_URL}/tasks/${topic}`)\r\n            .then(res => res.json());\r\n}\r\n\r\nexport const getTaskStatusByUser = async () => {\r\n    return await fetch(`${BASE_URL}/status/get/${localStorage.getItem('userID')}`)\r\n                .then(res => res.json());\r\n}\r\n\r\nexport const getImagesForTask = async (taskID) => {\r\n    return await fetch(`${BASE_URL}/images/paths/${taskID}`)\r\n                .then(res => res.json());\r\n}\r\n\r\nexport const getSpecificTaskStatus = async (userID, taskID, status) => {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-type': 'application/json' },\r\n        body: JSON.stringify({ taskID, userID, status })\r\n    }\r\n\r\n    return await fetch(`${BASE_URL}/status/get`, requestOptions).then(res => res.json());\r\n}\r\n\r\nexport const newTask = async (fileName, fileContent, level, thema, imageNames) => {\r\n    const options = {\r\n        method: 'POST',\r\n        headers: { 'Content-type': 'application/json' },\r\n        body: JSON.stringify({ Titel: fileName, Text: fileContent, Level: level, Thema: thema, Images: imageNames })\r\n    }\r\n\r\n    return await fetch(`${BASE_URL}/tasks/new`, options).then(res => res.json());\r\n}\r\n\r\nexport const uploadImages = async (images) => {\r\n    const options = {\r\n        method: 'POST',\r\n        body: images\r\n    };\r\n\r\n    return await fetch(`${BASE_URL}/images/upload`, options);\r\n}\r\n\r\nexport const setStatusForTask = async (taskID, userID, status) => {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-type': 'application/json' },\r\n        body: JSON.stringify({ taskID, userID, status })\r\n    }\r\n\r\n    return await fetch(`${BASE_URL}/status/set`, requestOptions).then(res => res.json());\r\n}\r\n\r\nexport const getSchuelerList = async () => {\r\n    return await fetch(`${BASE_URL}/users/getSchueler`).then(res => res.json());\r\n}","import { BASE_URL } from './resources/backend';\r\n\r\nexport var authenticated = false;\r\n\r\nclass Auth {\r\n    constructor() {\r\n\r\n        this.state = {\r\n            user: {}\r\n        }\r\n    }\r\n\r\n    login(cb, username, password) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-type': 'application/json' },\r\n            body: JSON.stringify({ username, password })\r\n        }\r\n\r\n        const res = fetch(`${BASE_URL}/users`, requestOptions).then(res => res.json())\r\n\r\n        res.then((result) => {\r\n            if (result.status) {\r\n                authenticated = result.status;\r\n                localStorage.setItem('user', result.username);\r\n                localStorage.setItem('userID', result.userID);\r\n            } else {\r\n                authenticated = false;\r\n                alert(\"Falsche Eingabe!\")\r\n            }\r\n            cb();\r\n        })\r\n    }\r\n\r\n    signup(cb, username, password, mail) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-type': 'application/json' },\r\n            body: JSON.stringify({ username, password, mail })\r\n        }\r\n\r\n        const res = fetch(`${BASE_URL}/users/new`, requestOptions).then(res => res.json())\r\n\r\n        res.then((result) => {\r\n            if (result.status === 200) {\r\n                console.log('Alles in Ordnung');\r\n            } else {\r\n                console.log(`Error: ${result.message}`);\r\n            }\r\n            cb();\r\n        })\r\n    }\r\n\r\n    async getRole() {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-type': 'application/json' },\r\n            body: JSON.stringify({ userID: localStorage.getItem('userID') })\r\n        }\r\n\r\n        const res = await fetch(`${BASE_URL}/users/getRole`, requestOptions).then(res => res.json())\r\n        return res.role;\r\n    }\r\n\r\n    logout(cb) {\r\n        authenticated = false;\r\n        localStorage.clear();\r\n        cb();\r\n    }\r\n\r\n    isAuthenticated() {\r\n        return authenticated;\r\n    }\r\n}\r\n\r\nexport default new Auth();","import React, { useState } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { Search } from '@material-ui/icons';\r\n\r\nconst SearchBar = (props) => {\r\n    const [isSearching, setIsSearching] = useState(false);\r\n\r\n    const inputChange = (value) => {\r\n        props.onChange(value);\r\n        if (value === \"\") {\r\n            setIsSearching(!isSearching);\r\n        }\r\n    }\r\n\r\n    const BarStyling = { width: \"20rem\", background: \"#F2F1F9\", border: \"none\", padding: \"0.5rem\", borderRadius: \"50px\"};\r\n    return (\r\n        <div>\r\n            {isSearching ?\r\n                <input\r\n                    style={BarStyling}\r\n                    key=\"random1\"\r\n                    value={props.input}\r\n                    placeholder={\"search tasks\"}\r\n                    onChange={(e) => inputChange(e.target.value)}\r\n                />\r\n                :\r\n                <Button data-testid=\"enableSearching\" onClick={() => setIsSearching(!isSearching)}>\r\n                    <Search />\r\n                </Button>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBar;","import React, { useState } from 'react';\r\nimport Jdenticon from 'react-jdenticon';\r\nimport auth from '../../auth';\r\nimport { Typography, Button, Switch, ThemeProvider } from '@material-ui/core';\r\nimport './Header.scss';\r\nimport SearchBar from '../searchbar/SearchBar';\r\n\r\nconst Header = (props) => {\r\n    const [input, setInput] = useState();\r\n\r\n    const updateInput = async (input) => {\r\n        setInput(input);\r\n    }\r\n\r\n    const addNewTask = async () => {\r\n        const role = await auth.getRole()\r\n        if (role === 'admin') {\r\n            props.newTask()\r\n        } else {\r\n            alert('You do not have the right permissions to do that.')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"head\">\r\n            <ThemeProvider theme={props.theme}>\r\n                <div className=\"userName\">\r\n                    <Jdenticon size=\"48\" value={props.value} />\r\n                    <Typography className=\"typography\" variant=\"body1\" align=\"center\">{\"Hey, \" + props.value}</Typography>\r\n                    <SearchBar input={input} onChange={updateInput} />\r\n                </div>\r\n                <Typography variant=\"h3\">Lernplattform</Typography>\r\n                <div className=\"buttons\">\r\n                    <div style={{ display: \"flex\", justifyContent: \"center\", flexDirection: \"row\", alignItems: \"center\", marginRight: \"50px\" }}>\r\n                        <p className={props.variable === \"dark\" ? \"activeTheme\" : \"inactiveTheme\"}>Dark</p>\r\n                        <Switch className=\"btn\" color=\"default\" onChange={() => props.func()} />\r\n                        <p className={props.variable === \"light\" ? \"activeTheme\" : \"inactiveTheme\"}>Light</p>\r\n                    </div>\r\n                    <Button className=\"btn\" onClick={props.list} disabled={props.role === 'admin' ? false : true}>Liste</Button>\r\n                    <Button className=\"btn\" onClick={addNewTask}>Add Task</Button>\r\n                    <Button className=\"btn\" onClick={\r\n                        () => {\r\n                            auth.logout(() => { props.history.push('/login') })\r\n                        }\r\n                    }>Logout</Button>\r\n                </div>\r\n            </ThemeProvider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './TaskCard.scss'\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nconst TaskCard = (props) => {\r\n\r\n    var f = props.active ? \"active\" : \"finished\";\r\n\r\n    return (\r\n        <div id=\"sample\" className={f + \" taskCard\"}>\r\n                <ReactMarkdown>{props.value.Text}</ReactMarkdown>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskCard;\r\n","import React, { Component } from 'react';\r\nimport TaskCard from '../taskCard/TaskCard';\r\nimport { ArrowForwardIos, ArrowBackIos } from '@material-ui/icons';\r\nimport { Button } from '@material-ui/core';\r\n\r\nclass TaskRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.navRef = React.createRef();\r\n        this.leftButton = React.createRef();\r\n        this.rightButton = React.createRef();\r\n    }\r\n\r\n    scrollLeft = function (element, change, duration) {\r\n        var start = element.scrollLeft,\r\n            currentTime = 0,\r\n            increment = 20;\r\n\r\n        Math.easeInOutQuad = function (t, b, c, d) {\r\n            t /= d / 2;\r\n            if (t < 1) return c / 2 * t * t + b;\r\n            t--;\r\n            return -c / 2 * (t * (t - 2) - 1) + b;\r\n        };\r\n\r\n        var animateScroll = function () {\r\n            currentTime += increment;\r\n            var val = Math.easeInOutQuad(currentTime, start, change, duration);\r\n            element.scrollLeft = val;\r\n            if (currentTime < duration) {\r\n                setTimeout(animateScroll, increment)\r\n            }\r\n        }\r\n        animateScroll();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        var handleNav = (direction) => {\r\n            if (direction === 'left') {\r\n                this.scrollLeft(this.navRef.current, -1000, 200);\r\n            } else {\r\n                this.scrollLeft(this.navRef.current, 1000, 200);\r\n            }\r\n        };\r\n\r\n        var tasks = this.props.tasks;\r\n\r\n        function compare(a, b) {\r\n            if (a.Number < b.Number) {\r\n                return -1;\r\n            }\r\n            if (a.Number > b.Number) {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        }\r\n\r\n        tasks.sort(compare);\r\n\r\n        return (\r\n            <div className=\"taskRow\">\r\n                <div><Button onClick={() => handleNav('left')} id=\"left-button\"><ArrowBackIos /></Button></div>\r\n                <div className=\"parent\" ref={this.navRef}>\r\n                    {this.props.tasks.filter(task => task.Topic === this.props.topic).map(a =>\r\n                        <div className=\"taskWrapper\" onClick={() => this.props.func(a, this.props.statusArr.get(a.ID))} id={a.ID} key={a.ID}>\r\n                            <TaskCard active={typeof this.props.statusArr !== 'undefined' ? !this.props.statusArr.get(a.ID) : true} className=\"child\" value={a} />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div><Button onClick={() => handleNav('right')} id=\"right-button\"><ArrowForwardIos /></Button></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TaskRow\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport clsx from 'clsx';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport './taskPage.scss';\r\nimport { Button, makeStyles, Fab, CircularProgress } from '@material-ui/core';\r\nimport 'react-animated-slider/build/horizontal.css';\r\nimport { ArrowBack } from '@material-ui/icons';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { green } from '@material-ui/core/colors';\r\nimport SimpleImageSlider from 'react-simple-image-slider';\r\nimport { getImagesForTask, getSpecificTaskStatus, setStatusForTask, BASE_URL } from '../../resources/backend';\r\n\r\nfunction TaskPage(props) {\r\n\r\n    const [checkedState, setCheckedState] = useState(props.status);\r\n    const [loading, setLoading] = useState(true);\r\n    const [images, setImages] = useState([]);\r\n\r\n    const handleChange = (event) => {\r\n        if (!checkedState) {\r\n            setLoading(true);\r\n            setStatus(props.task.ID, localStorage.getItem('userID'));\r\n        } else {\r\n            alert('Diese Aufgabe ist bereits bearbeitet. Eine weitere Statusänderung ist nicht möglich.');\r\n        }\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n        },\r\n        wrapper: {\r\n            margin: theme.spacing(1),\r\n            position: 'relative',\r\n        },\r\n        buttonSuccess: {\r\n            backgroundColor: green[500],\r\n            '&:hover': {\r\n                backgroundColor: green[700],\r\n            },\r\n        },\r\n        fabProgress: {\r\n            color: green[500],\r\n            position: 'absolute',\r\n            top: -6,\r\n            left: -6,\r\n            zIndex: 1,\r\n        },\r\n        buttonProgress: {\r\n            color: green[500],\r\n            position: 'absolute',\r\n            top: '50%',\r\n            left: '50%',\r\n            marginTop: -12,\r\n            marginLeft: -12,\r\n        },\r\n    }));\r\n\r\n    const setStatus = (taskID, userID) => {\r\n        const status = checkedState ? 0 : 1;\r\n\r\n        setStatusForTask(taskID, userID, status).then((result) => {\r\n            if (result.status !== 200) {\r\n                console.log(result.message);\r\n            } else {\r\n                setLoading(false);\r\n                setCheckedState(!checkedState);\r\n            }\r\n        })\r\n    }\r\n\r\n    const getStatus = async (taskID, userID) => {\r\n        //fetch status from backend\r\n\r\n        const status = checkedState;\r\n\r\n        getSpecificTaskStatus(taskID, userID, status).then((result) => {\r\n            console.log(result);\r\n            setCheckedState(result.status);\r\n        });\r\n    }\r\n\r\n    const getStatusRef = useRef(getStatus);\r\n\r\n    const getImages = async () => {\r\n        const res = await getImagesForTask(props.task.ID);\r\n        console.log(res);\r\n        const arr = [];\r\n        for (var i of res) {\r\n            arr.push({ url: `${BASE_URL}/images/${i.imagePath}` });\r\n            console.log(i.imagePath);\r\n        }\r\n        setImages(arr);\r\n        console.log(arr);\r\n        setLoading(false);\r\n    }\r\n\r\n    const getImagesRef = useRef(getImages);\r\n\r\n    useEffect(() => {\r\n        getStatusRef.current(props.task.ID, localStorage.getItem('userID'));\r\n        //getStatus(props.task.ID, localStorage.getItem('userID'));\r\n        //getImages();\r\n        getImagesRef.current();\r\n    }, [props.task.ID, checkedState]);\r\n\r\n    var task = props.task;\r\n\r\n    const classes = useStyles();\r\n\r\n    const buttonClassname = clsx({ [classes.buttonSuccess]: checkedState });\r\n\r\n    return (\r\n        <div className=\"taskPage\" style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n            <p className=\"textWrapper\">\r\n                <ReactMarkdown>{task.Text}</ReactMarkdown>\r\n            </p>\r\n            {images.length > 0 && <h3 className=\"imageTitle\">Bilder und Grafiken</h3>}\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                {loading && <CircularProgress size={68} />}\r\n                {images.length > 0 && <SimpleImageSlider width={896} height={504} images={images} />}\r\n            </div>\r\n            <div style={{ justifyContent: \"space-between\", display: \"flex\" }}>\r\n                <Button onClick={() => props.func(true)}><ArrowBack />&nbsp;&nbsp;Back</Button>\r\n                <div className={classes.wrapper}>\r\n                    <Fab\r\n                        aria-label=\"save\"\r\n                        color=\"primary\"\r\n                        className={buttonClassname}\r\n                        onClick={handleChange}\r\n                    >\r\n                        {checkedState ? <CheckIcon /> : <SaveIcon />}\r\n                    </Fab>\r\n                    {loading && <CircularProgress size={68} className={classes.fabProgress} />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskPage;","import React, { useCallback } from 'react'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport { PictureAsPdf, Description, Image, Close } from '@material-ui/icons';\r\nimport { Button, FormControl, InputLabel, MenuItem, Select, CircularProgress } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { newTask, uploadImages } from '../../resources/backend';\r\n\r\nimport './newTask.scss';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction NewTask(props) {\r\n    const [fileName, setFileName] = React.useState('');\r\n    const [fileType, setFileType] = React.useState();\r\n    const [fileContent, setFileContent] = React.useState('');\r\n    const [level, setLevel] = React.useState('');\r\n    const [thema, setThema] = React.useState('');\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [uploading, setUploading] = React.useState(false);\r\n    const [files, setFiles] = React.useState(new Map());\r\n\r\n    const classes = useStyles();\r\n\r\n    const uploadData = async (event) => {\r\n        event.preventDefault();\r\n        setUploading(true);\r\n\r\n        var images = new FormData();\r\n        for (var [, value] of files.entries()) {\r\n            if (value.type.includes('image')) images.append(value.type, value);\r\n        }\r\n\r\n        if (fileName !== '' && level !== '' && thema !== '') {\r\n            const imagePaths = await uploadImages(images).then(r => r.json());\r\n            await newTask(fileName, fileContent, level, thema, imagePaths);\r\n            setUploading(false);\r\n\r\n            alert(\"Task successfully uploaded\");\r\n        } else {\r\n            setUploading(false);\r\n            \r\n            alert(\"Check your Input\");\r\n        }\r\n    }\r\n\r\n    const handleChangeLevel = (event) => {\r\n        setLevel(event.target.value);\r\n    }\r\n\r\n    const handleChangeThema = (event) => {\r\n        setThema(event.target.value);\r\n    }\r\n\r\n    const onDrop = useCallback((acceptedFiles) => {\r\n        setLoading(true)\r\n        acceptedFiles.forEach((file) => {\r\n            setFileType(file.name.split('.')[1])\r\n            console.log(file.type)\r\n            const fi = files;\r\n            fi.set(file.name, file);\r\n            setFiles(fi);\r\n            if (file.type.includes('text')) {\r\n                setFileName(file.name.split('.')[0])\r\n                const reader = new FileReader()\r\n\r\n                reader.onabort = () => console.log('file reading was aborted')\r\n                reader.onerror = () => console.log('file reading has failed')\r\n                reader.onload = () => {\r\n                    // Do whatever you want with the file contents\r\n                    const binaryStr = reader.result\r\n                    setFileContent(binaryStr)\r\n                    setLoading(false)\r\n                }\r\n                reader.readAsText(file)\r\n            }\r\n        })\r\n        setLoading(false);\r\n    }, [files])\r\n\r\n    const { getRootProps, getInputProps } = useDropzone({ onDrop })\r\n\r\n    return (\r\n        <>\r\n            {uploading ?\r\n\r\n                <CircularProgress />\r\n\r\n                :\r\n\r\n                <div className=\"root\">\r\n                    <Button className=\"exitButton\" onClick={() => props.closeNewTask()}><Close /> Zurück</Button>\r\n                    <div className=\"taskDisplay\">\r\n                        {fileName && (loading ? <CircularProgress /> : <>\r\n                            {fileType != null && (fileType === 'pdf' ? <PictureAsPdf fontSize=\"large\" /> : <Description fontSize=\"large\" />)}\r\n                        </>)}\r\n                        {fileName && fileName}\r\n                    </div>\r\n                    <div className=\"inputSelectorBox\">\r\n                        <FormControl className={\"inputSelector \" + classes.FormControl}>\r\n                            <InputLabel id=\"demo-simple-selected-label\">Thema</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\"\r\n                                value={thema}\r\n                                onChange={handleChangeThema}\r\n                            >\r\n                                <MenuItem value=\"Python\">Python</MenuItem>\r\n                                <MenuItem value=\"Java\">Java</MenuItem>\r\n                                <MenuItem value=\"DB\">DB</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControl className={\"inputSelector \" + classes.FormControl}>\r\n                            <InputLabel id=\"demo-simple-select-label\">Level</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-selec-label\"\r\n                                id=\"demo-simple-selec\"\r\n                                value={level}\r\n                                onChange={handleChangeLevel}\r\n                            >\r\n                                <MenuItem value=\"Anfänger\">Anfänger</MenuItem>\r\n                                <MenuItem value=\"Fortgeschritten\">Fortgeschritten</MenuItem>\r\n                                <MenuItem value=\"Profi\">Profi</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n                    <form className=\"dropForm\" onSubmit={(e) => uploadData(e)}>\r\n                        <p>Text: </p>\r\n                        <div {...getRootProps()} className=\"dropBox\">\r\n                            <input name=\"textFile\" {...getInputProps()} />\r\n                            <div>\r\n                                {Array.from(files).filter(([, value]) => value.type.includes('text')).length === 0 && <p>Textdatei mit neuer Aufgabe per Drag and Drop hier ablegen oder klicken zum Auswählen</p>}\r\n                                {files && Array.from(files).filter(([, value]) => value.type.includes('text')).map(([key, value]) => <p className=\"imageListElement\" key={key}><Description /> - {value.name.split('.')[0]}</p>)}\r\n                            </div>\r\n                        </div>\r\n                        <p>Images: </p>\r\n                        <div {...getRootProps()} className=\"dropBox\">\r\n                            <input name=\"textFile\" {...getInputProps()} />\r\n                            <div>\r\n                                {Array.from(files).filter(([, value]) => value.type.includes('image')).length === 0 && <p>Zugehörige Bilder hier ablegen oder klicken zum Auswählen</p>}\r\n                                {files && Array.from(files).filter(([, value]) => value.type.includes('image')).map(([key, value]) => <p className=\"imageListElement\" key={key}><Image />  - {value.name.split('.')[0]}</p>)}\r\n                            </div>\r\n                        </div>\r\n                        <Button type=\"submit\" variant=\"outlined\" color=\"primary\">Upload</Button>\r\n                    </form>\r\n                </div>\r\n\r\n            }\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default NewTask;","import React, { Component } from 'react';\r\nimport './Content.scss';\r\nimport { CircularProgress, Box, Typography } from '@material-ui/core';\r\nimport TaskRow from '../taskRow/TaskRow';\r\nimport TaskPage from '../taskPage/TaskPage';\r\nimport NewTask from '../newTask/newTask';\r\nimport { getTasksByTopic, getTaskStatusByUser } from '../../resources/backend';\r\n\r\nfunction CircularProgressWithLabel(props) {\r\n    return (\r\n        <Box position=\"relative\" display=\"inline-flex\" style={{ marginLeft: \"25px\" }}>\r\n            <CircularProgress variant=\"static\" {...props} />\r\n            <Box\r\n                top={0}\r\n                left={0}\r\n                bottom={0}\r\n                right={0}\r\n                position=\"absolute\"\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n            >\r\n                <Typography variant=\"caption\" component=\"div\" color=\"textSecondary\">{`${Math.round(\r\n                    props.value,\r\n                )}%`}</Typography>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nclass Content extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            tasks: [],\r\n            isLoading: true,\r\n            task: null,\r\n            selected: false,\r\n            status: [],\r\n            updated: false,\r\n            newTask: props.newTask,\r\n            tstatus: false\r\n        };\r\n\r\n        this.navRef = React.createRef();\r\n    }\r\n\r\n    setNewTask() {\r\n        this.setState({ newTask: true });\r\n        console.log(\"Hallo\")\r\n    }\r\n\r\n    componentDidMount() {\r\n        getTasksByTopic(this.props.topic).then(aufgaben => this.setState({ tasks: aufgaben }));\r\n        getTaskStatusByUser().then(status => this.setState({ status: status, isLoading: false }));\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.isLoading) {\r\n            getTasksByTopic(this.props.topic).then(aufgaben => this.setState({ tasks: aufgaben }));\r\n            getTaskStatusByUser().then(status => this.setState({ status: status, isLoading: false }));\r\n        }\r\n    }\r\n\r\n    handleNav = (direction) => {\r\n        if (direction === 'left') {\r\n            this.navRef ? (this.navRef.current.scrollLeft -= 1500) : console.log('');\r\n        } else {\r\n            this.navRef ? (this.navRef.current.scrollLeft += 1500) : console.log('');\r\n        }\r\n    }\r\n\r\n    selectedTask = (t, s) => {\r\n        this.setState({ task: t, selected: true, tstatus: s });\r\n    }\r\n\r\n    unselectTask = (x) => {\r\n        if (x) {\r\n            this.setState({ isLoading: true });\r\n        };\r\n        this.setState({ task: null, selected: false });\r\n    }\r\n\r\n    render() {\r\n        const tasks = this.state.tasks;\r\n        const status = this.state.status;\r\n        const isLoading = this.state.isLoading;\r\n        var level = '';\r\n\r\n        var arr = [];\r\n        var arrS = [];\r\n        var arrM = [];\r\n        var levelNames = ['Anfänger', 'Fortgeschritten', 'Profi'];\r\n\r\n        for (let i in levelNames) {\r\n            var helpArray = tasks.filter(task => task.Topic === this.props.topic).filter(task => task.Level === levelNames[i]);\r\n            var helpArrayS;\r\n            if (status.length !== 0) {\r\n                helpArrayS = status.filter(st => st.topic === this.props.topic).filter(s => s.level === levelNames[i]);\r\n                var numPos = 0;\r\n                var myMap = new Map();\r\n                if (helpArrayS.length !== 0) {\r\n                    for (let i of helpArrayS) {\r\n                        if (i.status !== 0) {\r\n                            numPos = numPos + 1;\r\n                        }\r\n                        myMap.set(i.id, i.status);\r\n                    }\r\n                    arrM[i] = myMap;\r\n                    arrS[i] = Math.round((numPos / helpArray.length) * 100);\r\n                };\r\n            }\r\n            if (helpArray.length !== 0) arr[i] = helpArray;\r\n        }\r\n\r\n        return (\r\n            <div\r\n                role=\"tabpanel\"\r\n                hidden={this.props.value !== this.props.index}\r\n                id={`vertical-tabpanel-${this.props.index}`}\r\n                aria-labelledby={`vertical-tab-${this.props.index}`}\r\n                {...this.props.other}\r\n                style={{ marginLeft: '225px' }}\r\n            >\r\n                {this.props.value === this.props.index && (\r\n                    <div>\r\n                        {isLoading ?\r\n                            <CircularProgress style={{ marginTop: '25%' }} />\r\n                            :\r\n                            <div>\r\n                                {this.state.newTask ? <NewTask closeNewTask={this.props.closeNewTask} /> :\r\n                                    <>{this.state.selected ?\r\n                                        <div>\r\n                                            <TaskPage status={this.state.tstatus} task={this.state.task} func={this.unselectTask} />\r\n                                        </div>\r\n                                        :\r\n                                        <>{arr.length !== 0 ?\r\n                                            <>{arr.map((task, index) =>\r\n                                                <div key={task[0].ID}>\r\n                                                    {task[0].Level !== level ?\r\n                                                        <h1 className=\"headLine\">{level = task[0].Level}<CircularProgressWithLabel value={typeof arrS[index] !== 'undefined' ? arrS[index] : 0} /></h1>\r\n                                                        :\r\n                                                        null\r\n                                                    }\r\n                                                    <div className=\"task-container\">\r\n                                                        <TaskRow statusArr={arrM[index]} func={this.selectedTask} topic={this.props.topic} tasks={task} />\r\n                                                    </div>\r\n                                                </div>\r\n                                            )}</>\r\n                                            :\r\n                                            <div style={{ display: \"flex\", justifyContent: \"center\", alignContent: \"center\", alignItems: \"center\", textAlign: \"center\", marginTop: \"25%\" }}>COULD NOT LOAD ANY TASKS</div>\r\n                                        }</>\r\n                                    }</>}\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n\r\n    };\r\n}\r\n\r\nexport default Content;","import React from 'react';\r\nimport './Menu.scss';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Content from '../content/Content';\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n      id: `vertical-tab-${index}`,\r\n      'aria-controls': `vertical-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      paddingTop: \"80px\",\r\n    },\r\n    tabs: {\r\n      borderRight: `1px solid ${theme.palette.divider}`,\r\n      zIndex: 2\r\n    },\r\n}));\r\n\r\nconst Menu = (props) => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    }\r\n\r\n    return (\r\n        <div data-testid={props.testid} className={classes.root}>\r\n            <Tabs\r\n            orientation=\"vertical\"\r\n            variant=\"scrollable\"\r\n            value={value}\r\n            onChange={handleChange}\r\n            aria-label=\"Vertical tabs example\"\r\n            className={classes.tabs + ' menu'}>\r\n                <Tab className=\"firstOne\" label={<b>Python</b>} {...a11yProps(0)}></Tab> \r\n                <Tab label={<b>Java</b>} {...a11yProps(1)}></Tab>\r\n                <Tab label={<b>DB</b>} {...a11yProps(2)}></Tab>\r\n                <Tab label={<b>Something</b>} {...a11yProps(3)}></Tab>\r\n                <Tab label={<b>Something else</b>} {...a11yProps(4)}></Tab>\r\n            </Tabs>\r\n            \r\n            <Content closeNewTask={props.closeNewTask} newTask={props.newTask} key={props.newTask + 1} topic=\"Python\" value={value} index={0}></Content>\r\n            <Content closeNewTask={props.closeNewTask} newTask={props.newTask} key={props.newTask + 3} topic=\"Java\" value={value} index={1}></Content>\r\n            <Content closeNewTask={props.closeNewTask} newTask={props.newTask} key={props.newTask + 5} topic=\"DB\" value={value} index={2}></Content>\r\n            <Content closeNewTask={props.closeNewTask} newTask={props.newTask} key={props.newTask + 7} topic=\"Something\" value={value} index={3}></Content>\r\n            <Content closeNewTask={props.closeNewTask} newTask={props.newTask} key={props.newTask + 9} topic=\"SomethingElse\" value={value} index={4}></Content>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Menu;","import React, { Component } from 'react';\nimport './App.scss';\nimport Header from './components/header/Header';\nimport Menu from './components/menu/Menu';\nimport auth from './auth';\nimport { getSchuelerList } from './resources/backend';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { Button, Slide, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      themeVariable: 'dark',\n      newTask: false,\n      role: 'schueler',\n      open: false,\n      schueler: null\n    }\n  }\n\n  setNewTask = () => {\n    this.setState({ newTask: !this.state.newTask });\n  }\n\n  componentDidMount() {\n    auth.getRole().then(res => this.setState({ role: res }));\n    getSchuelerList().then(res => this.setState({ schueler: res }));\n  }\n\n  render() {\n    var darkTheme = createMuiTheme({\n      palette: {\n        primary: {\n          main: '#18FFFF',\n          dark: '',\n        },\n        secondary: {\n          main: '#18FFFF',\n          dark: '',\n        },\n        type: 'dark'\n      }\n    })\n\n    var lightTheme = createMuiTheme({\n      palette: {\n        primary: {\n          main: '#E20074',\n          dark: '',\n        },\n        secondary: {\n          main: '#E20074',\n          dark: '',\n        },\n        type: 'light'\n      }\n    })\n\n    document.body.classList.add(this.state.themeVariable);\n\n    var themeChange = () => {\n      document.body.classList.remove(this.state.themeVariable);\n      this.state.themeVariable === 'dark' ? this.setState({ themeVariable: 'light' }) : this.setState({ themeVariable: 'dark' });\n    }\n\n    var handleOpen = () => {\n      this.setState({ open: !this.state.open })\n    }\n\n    return (\n      <div className=\"App\">\n        <ThemeProvider theme={darkTheme}>\n          <Dialog\n            open={this.state.open}\n            TransitionComponent={Transition}\n            keepMounted\n            onClose={handleOpen}\n            aria-labelledby=\"alert-dialog-slide-title\"\n            aria-describedby=\"alert-dialog-slide-description\"\n          >\n            <DialogTitle id=\"alert-dialog-slide-title\">{\"Schüler\"}</DialogTitle>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-slide-description\">\n                {this.state.schueler && this.state.schueler.schueler.map(schueler => <React.Fragment key={schueler.user_id}>{schueler.username}<br/>{schueler.email}<br/><br/></React.Fragment>)}\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleOpen} color=\"primary\">\n                Okay\n              </Button>\n            </DialogActions>\n          </Dialog>\n          <Header list={handleOpen} role={this.state.role} history={this.props.history} variable={this.state.themeVariable} theme={darkTheme} func={themeChange} newTask={this.setNewTask} className=\"head\" value={localStorage.getItem('user')} />\n        </ThemeProvider>\n        {this.state.themeVariable === 'dark' ?\n          <ThemeProvider theme={darkTheme}>\n            <Menu testid=\"test1\" closeNewTask={this.setNewTask} newTask={this.state.newTask} className=\"menu\" />\n          </ThemeProvider>\n          :\n          <ThemeProvider theme={lightTheme}>\n            <Menu testid=\"test2\" closeNewTask={this.setNewTask} newTask={this.state.newTask} className=\"menu\" />\n          </ThemeProvider>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;","import React, { useState } from 'react';\r\nimport './Login.scss';\r\nimport { TextField, Typography, Button, Switch } from '@material-ui/core';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport { AccountCircle, Lock, Mail } from '@material-ui/icons/';\r\nimport auth from '../../auth';\r\nimport { Redirect } from 'react-router-dom/cjs/react-router-dom.min';\r\n\r\n\r\n\r\nconst Login = (props) => {\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [mail, setMail] = useState('');\r\n    const [switchStatus, setSwitchStatus] = useState(false);\r\n\r\n    const handleChangeUser = (e) => {\r\n        setUsername(e.target.value);\r\n    }\r\n\r\n    const handleChangePW = (e) => {\r\n        setPassword(e.target.value);\r\n    }\r\n\r\n    const handleChangeMail = (e) => {\r\n        setMail(e.target.value);\r\n    }\r\n\r\n    const handleChangeSwitch = (event) => {\r\n        setSwitchStatus(event.target.checked);\r\n    }\r\n\r\n    const login = () => {\r\n        auth.login(() => {\r\n            props.history.push(`/learning`);\r\n        }, username, password)\r\n    }\r\n\r\n    const signup = () => {\r\n        auth.signup(() => {\r\n            //props.history.push('/login');\r\n        }, username, password, mail);\r\n        alert(`username: ${username}\\npassword: ${password}\\nmail: ${mail}`);\r\n        setSwitchStatus(false);\r\n    }\r\n\r\n    const handleKeyUp = (event) => {\r\n        if(event.key === \"Enter\") {\r\n            login();\r\n        }\r\n    }\r\n\r\n    const theme = createMuiTheme({\r\n        palette: {\r\n            primary: {\r\n                main: '#18FFFF',\r\n                dark: '',\r\n            },\r\n            secondary: {\r\n                main: '#18FFFF',\r\n                dark: '',\r\n            },\r\n            type: 'dark'\r\n        }\r\n    })\r\n\r\n    if (localStorage.getItem('user')) {\r\n        return <Redirect to={\r\n            {\r\n                pathname: \"/\",\r\n                state: {\r\n                    from: props.location\r\n                }\r\n            }\r\n        }/>\r\n    } else {\r\n        return (\r\n            <div className=\"logPage\">\r\n                <ThemeProvider theme={theme}>\r\n                    <Typography variant=\"h1\">Login Page</Typography>\r\n                    <div className=\"form\">\r\n                        <div className=\"lsSwitch\">\r\n                            <Typography>Login</Typography>\r\n                            <Switch\r\n                                checked={switchStatus}\r\n                                onChange={handleChangeSwitch}\r\n                            />\r\n                            <Typography>Sign Up</Typography>\r\n                        </div>\r\n                        <div>\r\n                            <AccountCircle/>\r\n                            <TextField label=\"Username\" value={username} onChange={handleChangeUser}/>\r\n                        </div>\r\n                        <div>\r\n                            <Lock/>\r\n                            <TextField onKeyUp={handleKeyUp} type=\"password\" label=\"Password\" value={password} onChange={handleChangePW}/>\r\n                        </div>\r\n                        {switchStatus &&\r\n                            <div>\r\n                                <Mail/>\r\n                                <TextField label=\"E-Mail\" value={mail} onChange={handleChangeMail}/>\r\n                            </div>\r\n                        }\r\n                        <Button onClick={switchStatus ? signup : login} variant=\"outlined\" color=\"primary\">Submit</Button>\r\n                    </div>\r\n                </ThemeProvider>\r\n                \r\n                \r\n            </div>\r\n        )\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { authenticated } from '../../auth';\r\nimport { Redirect } from 'react-router-dom/cjs/react-router-dom.min';\r\n\r\nconst ProtectedRoute = ({component: Component, ...rest}) => {\r\n    return (\r\n        <Route {...rest} render={\r\n            (props) => {\r\n                if (authenticated || localStorage.getItem('user')) {\r\n                    return <Component {...props}/>\r\n                } else {\r\n                    return <Redirect to={\r\n                        {\r\n                            pathname: \"/login\",\r\n                            state: {\r\n                                from: props.location\r\n                            }\r\n                        }\r\n                    }/>\r\n                }\r\n            }\r\n        }/>\r\n    )\r\n}\r\n\r\nexport default ProtectedRoute;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport { Button, ThemeProvider, createMuiTheme, Typography } from '@material-ui/core';\r\nimport './Start.scss';\r\n\r\nconst Start = () => {\r\n    var darkTheme = createMuiTheme({\r\n        palette: {\r\n            primary: {\r\n                main: '#18FFFF',\r\n                dark: '',\r\n            },\r\n            secondary: {\r\n                main: '#18FFFF',\r\n                dark: '',\r\n            },\r\n            type: 'dark'\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"start\">\r\n            <div className=\"headlines\">\r\n                <Typography variant=\"h1\">Willkommen auf meiner Website</Typography>\r\n                <Typography variant=\"h2\">Wohin soll's weiter gehen?</Typography>\r\n            </div>\r\n            <div className=\"Buttons\">\r\n                <ThemeProvider theme={darkTheme}>\r\n                    <Button color=\"primary\" variant=\"outlined\" href=\"/nextcloud\">Nextcloud</Button>\r\n                    <Button color=\"primary\" variant=\"outlined\" href=\"/learning\">Lernplattform</Button>\r\n                </ThemeProvider>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Start;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Login from './components/login/Login';\nimport ProtectedRoute from './components/protectedRoute/ProtectedRoute';\nimport * as serviceWorker from './serviceWorker';\nimport Start from './components/start/Start';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nReactDOM.render(\n  <div className=\"every\">\n    <Router>\n      <Switch>\n        <Route className=\"all\" exact path=\"/login\" component={Login}/>\n        <Route exact path=\"/\" component={Start}/>\n        <ProtectedRoute exact path=\"/learning\" component={App}/>\n        <Route path=\"*\" component={() => <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>404 NOT FOUND</div>}/>\n      </Switch>\n    </Router>\n  </div>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}